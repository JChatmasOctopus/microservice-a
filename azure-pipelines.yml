# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
- group: pipeline_shared
- name: image_name
  value: 'ms-attendance'
- name: image_full_name  # Constructs the full image path for GAR using variables from the group
  value: '$(gcp_gar_location)-docker.pkg.dev/$(gcp_project_id)/$(gcp_gar_repo_name)/$(image_name)' # UPDATED
- name: tag
  value: ''

stages:
- stage: Build_and_push
  displayName: 'Build and Push to GAR'
  jobs:
  - job: Build
    displayName: 'Build, push, and commit updated version'
    pool:
      vmImage: ubuntu-latest
    steps:
    - checkout: self
      persistCredentials: true

    # Read the VERSION file and increment the patch number
    - script: |
        echo "Reading current version from VERSION file..."
        VERSION=$(cat VERSION)
        IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION"
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"

        echo "##vso[task.setvariable variable=tag]$NEW_VERSION"
        echo "$NEW_VERSION" > VERSION

        echo "✅ New version: $NEW_VERSION"
      displayName: 'Bump patch version from VERSION file'  

    # Authenticate to GCP and configure Docker
    - script: |
        echo "Authenticating to Google Cloud..."
        echo "$gcp_gar_key" > $(System.DefaultWorkingDirectory)/gcp-key.json
        gcloud auth activate-service-account --key-file=$(System.DefaultWorkingDirectory)/gcp-key.json --quiet
        gcloud auth configure-docker $(gcp_gar_location)-docker.pkg.dev --quiet
        echo "✅ Successfully configured Docker for GAR."
      displayName: 'Authenticate to Google Cloud'
      env:
        gcp_gar_key: $(gcp_gar_key)

    # Build image
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        repository: '$(image_full_name)'
        tags: |
          $(tag)

    # Push the image to GAR
    - task: Docker@2
      displayName: 'Push Image to GAR'
      inputs:
        command: 'push'
        repository: '$(image_full_name)' # UPDATED
        tags: '$(tag)'

    # Commit the updated VERSION file back to the repo
    - script: |
        git config user.name "James Chatmas"
        git config user.email "james.chatmas@octopus.com"
        git add VERSION
        git commit -m "Bump version to $(tag) [skip ci]"
        git push origin HEAD:main
      displayName: 'Commit updated VERSION file'
      condition: succeeded()

    - task: OctopusBuildInformation@6
      inputs:
        OctoConnectedServiceName: 'OctopusDemo'
        Space: 'Family Info Center'
        PackageIds: '$(image_name)'
        PackageVersion: '$(tag)'
        Replace: 'true'
        
    - task: OctopusCreateRelease@6
      inputs:
        OctoConnectedServiceName: 'OctopusDemo'
        Space: 'Family Info Center'
        Project: '$(image_name)'
        ReleaseNumber: '$(tag)'
        Channel: 'Default'
        DefaultPackageVersion: '$(tag)'
        Packages: '$(image_name):$(tag)'
